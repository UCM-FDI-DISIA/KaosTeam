#include "ExploitableComponent.h"
#include "MovementComponentBomb.h"

ExploitableComponent::ExploitableComponent() : Component(), shockWithBomb(false), lf(nullptr), coll(nullptr) {
}
ExploitableComponent::~ExploitableComponent() {
	lf = nullptr;
	coll = nullptr;
}

void ExploitableComponent::initComponent() {
	lf = static_cast<LifeComponent*>(ent->getComponent(LIFE_COMPONENT));
	coll = static_cast<ColliderComponent*>(ent->getComponent(COLLIDER_COMPONENT));

	//Añadimos callback para que el objeto pueda ser destruido con bombas
	coll->GetTransofmCollider()->AddCall([this](Entity* e, Collider c) {checkCollisionsWithBombs(e, c); });
}

void ExploitableComponent::checkCollisionsWithBombs(Entity* e, Collider c) {
	if (!shockWithBomb) {	//primero comprobamos que no haya chocado con niguna bomba
		if (e->getName() == BOMB_ENTITY) {
			lf->SetActual(-1); //restamos una vida al objeto (deberia destruirse)
			shockWithBomb = true; //Ponemos booleano a true para que no quite vidas de más
			MovementComponentBomb* moveBomb = static_cast<MovementComponentBomb*>(e->getComponent(MOVEMENT_COMPONENT));
			moveBomb->setStatic(); //Ponemos a la bomba estatica
			moveBomb->explodeBomb();
		}
	}
}